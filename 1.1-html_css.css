@charset "utf-8";

/*Reseteo los márgenes y establezco el tamaño de las cajas "per default"*/
*{
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

body{
    background-color: black;
    
}
/*He usado el flex con direction:column para apilar las secciones por salto de linea.
También he usado el gap para mantener un orden uniforme al usar el grid*/
.container{
    display:flex;
    flex-direction: column;
    gap: 10px;
    max-width:1200px;
    margin: 0 auto;
}

/*grid template-columns me ha recordado los col estilo Bootstrap, así
que lo he usado para "dividir" los tamaños equitativamente*/
.header{
    display:grid;
    grid-template-columns: 1fr 2fr 1fr;
    gap:10px;
    background-color: darkslategray;
    padding:10px;
    margin-top:10px;
    margin-bottom:10px;
}

.header > div{
    display:flex;
    align-items: center;
    justify-content: center;
    padding: 10px;
    background-color:rgb(201, 60, 12);

}

.banner{
    border:20px solid orange;
    background-color: rgb(245, 249, 9);
    padding:20px;
}
/*Dde nuevo, 3/4 para los articulos y 1/4 para el aside*/
.main{
    display:grid;
    grid-template-columns: 3fr 1fr;
    background-color: black;
    gap:10px;
}
/*En template-columns:repeat() hace que se repita la caja en un nuevo
salto de linea: 2 cajas en el misma particion*/
.articles{
    display:grid;
    grid-template-columns:repeat(2, 1fr);
    grid-auto-rows: auto;
    background-color: darkslategray;
    gap:10px;
    padding:10px;
}

.article{
    background-color: cornflowerblue;
    padding:10px;
}
/*grid-column:span es como expandir celda en una tabla.*/
.navi{
    grid-column:span 2;
    padding:20px;
    background-color: slateblue;
}

aside{
    display:flex;
    flex-direction:column;
    background-color: coral;
    gap:10px;
    padding:10px;
}

.ad{
    padding:15px;
    background-color: orange;
   
}

footer{
    padding:20px;
    background-color: burlywood;
}

@media (max-width: 600px) {
    .header {
        grid-template-columns: 1fr;
    }
    
    .main {
        grid-template-columns: 1fr;
    }
    
    .articles {
        grid-template-columns: 1fr;
    }
    
    .navi {
        grid-column: span 1;
    }
    
    aside {
        flex-direction: column;
    }
}

@media (min-width:601px) and (max-width:768px){
    .header {
        grid-template-columns: 1fr;
    }
    
    .main {
        grid-template-columns: 1fr;
    }
    
    aside {
        flex-direction: column;

    }


}
